# ============================================================================
# ELASTIC BEANSTALK ENVIRONMENT VARIABLES TEMPLATE
# ============================================================================
# 
# IMPORTANT: Do NOT commit this file with actual values to version control
# This template shows all required environment variables for production deployment
# 
# SET THESE VARIABLES IN ELASTIC BEANSTALK CONSOLE:
# ============================================================================
# 1. Go to AWS Elastic Beanstalk Console
# 2. Select your environment
# 3. Go to Configuration > Software
# 4. Add the following environment variables in the "Environment properties" section
# ============================================================================

# =============================================================================
# REQUIRED ENVIRONMENT VARIABLES - SET THESE IN EB CONSOLE
# =============================================================================

# Database Configuration
MONGODB_URI=mongodb+srv://username:password@cluster.mongodb.net/
DB_NAME=torch-fellowship

# JWT Authentication (CRITICAL - Generate a strong secret)
JWT_SECRET=your_super_secure_random_jwt_secret_key_minimum_32_characters
JWT_EXPIRES_IN=90d

# Cloudinary Configuration (for image uploads)
CLOUDINARY_CLOUD_NAME=your_cloudinary_cloud_name
CLOUDINARY_API_KEY=your_cloudinary_api_key
CLOUDINARY_API_SECRET=your_cloudinary_api_secret

# Google Gemini AI Configuration
GEMINI_API_KEY=your_google_gemini_api_key

# Server Configuration (usually set automatically by EB)
PORT=5000
NODE_ENV=production

# =============================================================================
# DEPLOYMENT CHECKLIST
# =============================================================================
# □ MongoDB Atlas database is accessible from AWS (whitelist EB IP or use 0.0.0.0/0)
# □ Cloudinary account is set up and credentials are valid
# □ Google Gemini API key is active and has proper quotas
# □ JWT_SECRET is at least 32 characters long and cryptographically secure
# □ All environment variables are set in EB console
# □ Health check endpoint (/api/health) is working
# □ CORS is configured to allow your Netlify domain

# =============================================================================
# SECURITY BEST PRACTICES
# =============================================================================
# 1. Use AWS Secrets Manager for sensitive data instead of environment variables
# 2. Regularly rotate JWT secrets and API keys
# 3. Monitor access logs and set up CloudWatch alarms
# 4. Use IAM roles instead of access keys where possible
# 5. Enable AWS Config for compliance monitoring

# =============================================================================
# EXAMPLE VALUES (REPLACE WITH YOUR ACTUAL VALUES)
# =============================================================================
# MONGODB_URI=mongodb+srv://torch-user:MySecurePass123@torch-cluster.xyz123.mongodb.net/
# DB_NAME=torch-fellowship-prod
# JWT_SECRET=MyVerySecureRandomJWTSecretThatIsAtLeast32CharactersLong2024!
# JWT_EXPIRES_IN=90d
# CLOUDINARY_CLOUD_NAME=torch-fellowship
# CLOUDINARY_API_KEY=123456789012345
# CLOUDINARY_API_SECRET=MySecureCloudinarySecret123
# GEMINI_API_KEY=AIzaSyABC123-YourGeminiAPIKeyHere
# PORT=5000
# NODE_ENV=production

# =============================================================================
# TESTING CONFIGURATION
# =============================================================================
# After setting environment variables in EB:
# 1. Deploy your application
# 2. Check EB logs for any configuration errors
# 3. Test the health endpoint: https://your-app.elasticbeanstalk.com/api/health
# 4. Verify database connectivity through your app
# 5. Test API endpoints with a tool like Postman