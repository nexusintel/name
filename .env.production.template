# =============================================================================
# TORCH FELLOWSHIP BACKEND - PRODUCTION ENVIRONMENT CONFIGURATION
# =============================================================================
# 
# IMPORTANT: This is a template for production deployment to EC2
# 
# SECURITY NOTICE:
# - Never commit this file to version control with real values
# - Use AWS Systems Manager Parameter Store or AWS Secrets Manager for sensitive data
# - Ensure proper IAM roles and security groups are configured
# 
# =============================================================================

# Server Configuration
PORT=5000
NODE_ENV=production

# Database Configuration
# Use MongoDB Atlas or AWS DocumentDB for production
# Replace with your production MongoDB connection string
MONGODB_URI=mongodb+srv://production_user:your_secure_password@your-cluster.mongodb.net/torch-fellowship-prod?retryWrites=true&w=majority
DB_NAME=torch-fellowship-prod

# JWT Configuration
# Generate a strong, unique secret for production
# Use: node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"
JWT_SECRET=your_production_jwt_secret_here_must_be_64_characters_minimum_length
JWT_EXPIRES_IN=30d

# Gemini AI Configuration
# Obtain from Google AI Studio: https://makersuite.google.com/app/apikey
GEMINI_API_KEY=your_production_gemini_api_key_here

# Cloudinary Configuration (for image uploads)
# Obtain from Cloudinary Dashboard: https://cloudinary.com/console
CLOUDINARY_CLOUD_NAME=your_production_cloud_name
CLOUDINARY_API_KEY=your_production_api_key
CLOUDINARY_API_SECRET=your_production_api_secret

# CORS Configuration
# Replace with your actual production frontend URL
FRONTEND_URL=https://your-production-domain.com

# Security Configuration
# Rate limiting (requests per window)
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# Session Configuration
SESSION_SECRET=your_production_session_secret_here

# SSL/TLS Configuration (if using HTTPS)
# SSL_CERT_PATH=/path/to/ssl/certificate.crt
# SSL_KEY_PATH=/path/to/ssl/private.key

# Logging Configuration
LOG_LEVEL=info
LOG_FILE_PATH=/var/log/torch-fellowship/app.log

# Health Check Configuration
HEALTH_CHECK_ENDPOINT=/health
HEALTH_CHECK_TIMEOUT=5000

# AWS Configuration (if using AWS services)
# AWS_REGION=us-east-1
# AWS_ACCESS_KEY_ID=your_aws_access_key
# AWS_SECRET_ACCESS_KEY=your_aws_secret_key

# Email Configuration (if using email services)
# SMTP_HOST=your_smtp_host
# SMTP_PORT=587
# SMTP_USER=your_smtp_user
# SMTP_PASS=your_smtp_password

# Monitoring and Analytics
# SENTRY_DSN=your_sentry_dsn_for_error_tracking
# GOOGLE_ANALYTICS_ID=your_ga_tracking_id

# =============================================================================
# DEPLOYMENT NOTES:
# 
# 1. Replace all placeholder values with actual production values
# 2. Use AWS Systems Manager Parameter Store for sensitive values:
#    aws ssm put-parameter --name "/torch-fellowship/prod/jwt-secret" --value "your_secret" --type "SecureString"
# 
# 3. Configure EC2 instance security groups:
#    - Allow inbound traffic on port 5000 from load balancer only
#    - Allow outbound traffic for database and external API connections
# 
# 4. Set up CloudWatch logging and monitoring
# 5. Configure auto-scaling groups for high availability
# 6. Set up SSL/TLS termination at load balancer level
# 
# =============================================================================